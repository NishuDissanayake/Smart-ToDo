@page "/todo"
@using ToDoApp.Client.Models
@using ToDoApp.Client.Services
@rendermode InteractiveAuto

<PageTitle>To Do List</PageTitle>

<h1>ToDo List</h1>

<div class="main-container">
    <h3>Hello, User</h3>

    <div class="add-title">
        <input type="text" @bind="newTaskTitle" placeholder="Task Title" /> <br />
        <textarea @bind="newTaskDescription" placeholder="Task Description" /> <br />
        <input type="date" @bind="newDueDate" /> <br />
        <button @onclick="addTask">Add New Task</button>
    </div>

    <div class="ietm-list">
        <table>
            <thead>
            <tr>
                <th>Task Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion State</th>
                    <th>Actions</th>
            </tr>
            </thead>
            <tbody>
                @foreach (var task in Tasks)
                {
            <tr>
                        <td>@task.Id</td>
                        <td>@task.Title</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate</td>
                <td>
                            <input type="checkbox" @bind="task.IsDone" />
                </td>
                        <td>
                            <button @onclick="() => deleteTask(task.Id)">Delete</button>
                        </td>
            </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string newTaskTitle = "";
    private string newTaskDescription = "";
    private DateOnly newDueDate;

    private ToDoService toDoService;

    private void addTask()
    {
        toDoService.AddTask(new ToDoItem
            {
                Title = newTaskTitle,
                Description = newTaskDescription,
                DueDate = newDueDate,
                IsDone = false
            });

        newTaskTitle = "";
        newTaskDescription = "";
    }
}
