@page "/todo"
@using ToDoApp.Client.Models
@using ToDoApp.Client.Services
@rendermode InteractiveAuto

@inject ToDoService toDoService

<PageTitle>To Do List</PageTitle>

<div class="main-container">
    <h3>Hello, User</h3>

    <div class="add-title">
        <input type="text" @bind="newTaskTitle" placeholder="Task Title" required /> <br />
        <textarea @bind="newTaskDescription" placeholder="Task Description"></textarea> <br />
        <input type="date" @bind="newDueDate" /> <br />
        <button @onclick="addTask">Add New Task</button>
    </div>

    <p>Incomplete Tasks: @toDoService.GetIncompleteTaskCount()</p>

    <div class="item-list">
        <table>
            <thead>
            <tr>
                <th>Task Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion State</th>
                    <th>Actions</th>
            </tr>
            </thead>
            <tbody>
                @foreach (var task in Tasks)
                {
            <tr>
                        <td>@task.Id</td>
                        <td>@task.Title</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate.ToShortDateString()</td>
                <td>
                            <input type="checkbox" @bind="task.IsDone" @oninput="() => toggleCompletion(task.Id)" />
                </td>
                        <td>
                            <button @onclick="() => deleteTask(task.Id)">Delete</button>
                        </td>
            </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string newTaskTitle = "";
    private string newTaskDescription = "";
    private DateTime newDueDate = DateTime.Now;
    private List<ToDoItem> Tasks = new();

    protected override void OnInitialized()
    {
        LoadTasks();
    }

    private void LoadTasks()
    {
        Tasks = toDoService.GetAllTasks();
    }

    private void addTask()
    {
        toDoService.AddTask(new ToDoItem
            {
                Title = newTaskTitle,
                Description = newTaskDescription,
                DueDate = newDueDate
            });

        newTaskTitle = "";
        newTaskDescription = "";
    }

    public void deleteTask(int taskId)
    {
        toDoService.DeleteTask(taskId);
    }

    private void toggleCompletion(int taskId)
    {
        toDoService.StateToggle(taskId);
    }
}
